@page "/WeatherForecast"

@inject IHttpClientFactory _httpClientFactory

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>Fetching data from the server.</p>
<p>The page is not authorized, but using an authorized HttpClient, which can redirect the browser to the login page in case of an unauthorized call.</p>
<p>It can be tested by deleting the AuthCookie from the browser.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        HttpClient client = _httpClientFactory.CreateClient(AuthDefaults.AuthorizedClientName);

        forecasts = await client.GetFromJsonAsync<WeatherForecast[]>("api/WeatherForecast");
    }
}
